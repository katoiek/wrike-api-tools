extends layout

block content
  .d-flex.justify-content-between.align-items-center.mb-4
    h1 #{__('spaces.title')}
    .input-group.w-auto
      input#searchInput.form-control(type="text", placeholder=getLocale() === 'en' ? 'Search spaces...' : 'スペースを検索...')
      button.btn.btn-outline-secondary(type="button")
        i.bi.bi-search

  .card.shadow-sm
    .card-body
      .table-responsive
        table.table.table-hover#spacesTable
          thead
            tr
              th(onclick="sortTable(0)")
                | #{__('spaces.name')}
                i.bi.bi-arrow-down-up
              th(onclick="sortTable(1)")
                | #{getLocale() === 'en' ? 'Space ID' : 'スペースID'}
                i.bi.bi-arrow-down-up
              th(onclick="sortTable(2)")
                | #{getLocale() === 'en' ? 'Access Type' : 'アクセスタイプ'}
                i.bi.bi-arrow-down-up
              th #{__('spaces.actions')}
            tr.filters
              th
                input.form-control.form-control-sm.column-filter(type="text", data-column="0", placeholder=getLocale() === 'en' ? 'Filter by name...' : '名前でフィルター...')
              th
                input.form-control.form-control-sm.column-filter(type="text", data-column="1", placeholder=getLocale() === 'en' ? 'Filter by ID...' : 'IDでフィルター...')
              th
                input.form-control.form-control-sm.column-filter(type="text", data-column="2", placeholder=getLocale() === 'en' ? 'Filter by access type...' : 'アクセスタイプでフィルター...')
              th
          tbody
            if spaces && spaces.length
              each space in spaces
                tr
                  td= space.title
                  td
                    code= space.id
                  td= space.accessType
                  td
                    if space.permalink
                      a.btn.btn-sm.btn-outline-secondary(href=space.permalink, target="_blank")
                        i.bi.bi-box-arrow-up-right
                        span.ms-1 #{getLocale() === 'en' ? 'Open in Wrike' : 'Wrikeで開く'}
                    else
                      - const wrikeUrl = `https://www.wrike.com/open.htm?id=${space.id}`
                      a.btn.btn-sm.btn-outline-secondary(href=wrikeUrl, target="_blank")
                        i.bi.bi-box-arrow-up-right
                        span.ms-1 #{getLocale() === 'en' ? 'Open in Wrike' : 'Wrikeで開く'}
            else
              tr
                td.text-center(colspan="4") #{getLocale() === 'en' ? 'No spaces found' : 'スペースがありません'}

      if nextPageToken
        .d-flex.justify-content-between.align-items-center.mt-3
          .text-muted #{getLocale() === 'en' ? 'Showing up to 100 spaces per page' : '1ページあたり最大100スペースを表示'}
          nav(aria-label="Pagination")
            ul.pagination
              if currentPage > 1
                li.page-item
                  a.page-link(href=`/spaces?page=${currentPage - 1}`) #{getLocale() === 'en' ? 'Previous' : '前へ'}

              - var startPage = Math.max(1, currentPage - 2)
              - var endPage = Math.min(startPage + 4, totalPages)

              if startPage > 1
                li.page-item
                  a.page-link(href="/spaces?page=1") 1
                if startPage > 2
                  li.page-item.disabled
                    span.page-link ...

              - for (var i = startPage; i <= endPage; i++)
                li.page-item(class=i === currentPage ? 'active' : '')
                  a.page-link(href=`/spaces?page=${i}`)= i

              if endPage < totalPages
                if endPage < totalPages - 1
                  li.page-item.disabled
                    span.page-link ...
                li.page-item
                  a.page-link(href=`/spaces?page=${totalPages}`)= totalPages

              if nextPageToken
                li.page-item
                  a.page-link(href=`/spaces?page=${currentPage + 1}`) #{getLocale() === 'en' ? 'Next' : '次へ'}

block scripts
  script.
    // フィルター状態を保持する配列
    const filterValues = [
      '', // 名前フィルター
      '', // IDフィルター
      ''  // アクセスタイプフィルター
    ];

    // 全体検索の値
    let globalSearchValue = '';

    // テーブルフィルタリング関数
    function filterTable() {
      const table = document.getElementById('spacesTable');
      const rows = table.getElementsByTagName('tr');
      const hasFilters = filterValues.some(filter => filter !== '');

      // ヘッダー行とフィルター行をスキップするため、開始インデックスを2に設定
      for (let i = 2; i < rows.length; i++) {
        const cells = rows[i].getElementsByTagName('td');
        if (cells.length) {
          let showRow = true;

          // 各カラムのフィルターを適用
          for (let j = 0; j < filterValues.length; j++) {
            if (filterValues[j] !== '' && cells[j]) {
              const cellText = cells[j].textContent || cells[j].innerText;
              if (cellText.toLowerCase().indexOf(filterValues[j].toLowerCase()) === -1) {
                showRow = false;
                break;
              }
            }
          }

          // グローバル検索を適用
          if (showRow && globalSearchValue !== '') {
            showRow = false;
            for (let j = 0; j < cells.length; j++) {
              const cellText = cells[j].textContent || cells[j].innerText;
              if (cellText.toLowerCase().indexOf(globalSearchValue.toLowerCase()) > -1) {
                showRow = true;
                break;
              }
            }
          }

          rows[i].style.display = showRow ? '' : 'none';
        }
      }
    }

    // グローバル検索機能
    document.getElementById('searchInput').addEventListener('keyup', function() {
      globalSearchValue = this.value.toLowerCase();
      filterTable();
    });

    // カラムフィルター機能
    document.querySelectorAll('.column-filter').forEach(filter => {
      filter.addEventListener('keyup', function() {
        const column = parseInt(this.getAttribute('data-column'));
        filterValues[column] = this.value;
        filterTable();
      });
    });

    // Sorting functionality
    function sortTable(n) {
      let table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
      table = document.getElementById('spacesTable');
      switching = true;
      dir = 'asc';

      while (switching) {
        switching = false;
        rows = table.rows;

        // ヘッダー行とフィルター行をスキップするため、開始インデックスを2に設定
        for (i = 2; i < (rows.length - 1); i++) {
          shouldSwitch = false;
          x = rows[i].getElementsByTagName('td')[n];
          y = rows[i + 1].getElementsByTagName('td')[n];

          // 非表示の行はスキップ
          if (rows[i].style.display === 'none' || rows[i + 1].style.display === 'none') {
            continue;
          }

          if (dir === 'asc') {
            if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
              shouldSwitch = true;
              break;
            }
          } else if (dir === 'desc') {
            if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
              shouldSwitch = true;
              break;
            }
          }
        }

        if (shouldSwitch) {
          rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
          switching = true;
          switchcount++;
        } else {
          if (switchcount === 0 && dir === 'asc') {
            dir = 'desc';
            switching = true;
          }
        }
      }
    }
